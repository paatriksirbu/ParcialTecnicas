@startuml

enum Orientacion {
    HORIZONTAL
    VERTICAL
}

enum Clima {
    CALMA
    TSUNAMI
    VIENTO
    TORMENTA
}

interface IntBarco {
    void moverBarco()
    boolean disparar(int fila, int columna)
}

abstract class Barco {
    - int tamano
    - boolean golpeado
    - CuadriculaIA cuadriculaIA
    - int filaActual
    - int columnaActual
    - Clima clima
    - EstrategiaPosicionamiento estrategia
    - int seccionesGolpeadas
    - int resistencia
    - Orientacion orientacion
    - boolean hundido
    + void moverBarco()
    + boolean disparar(int fila, int columna)
    + int getResistencia()
}

class Frigate {
    + boolean disparar(int fila, int columna)
}

class Canoe {
    + boolean disparar(int fila, int columna)
}

class Battleship {
    - boolean[] seccionesAisladas
    + void tocarSeccionAislada(int seccion)
    + boolean disparar(int fila, int columna)
    + int getResistencia()
    + boolean[] getSeccionesAisladas()
}

class CuadriculaIA {
    - char[][] cuadricula
    - int numFilas
    - int numColumnas
    - Barco barco
    + static void mostrarTablero(CuadriculaIA cuadriculaIA)
    + void depositarBarco(int fila, int columna, Barco barco)
    + char[][] getCuadricula()
    + int getNumFilas()
    + int getNumColumnas()
    + Barco getBarco()
}

interface FabricaBarcosInt {
    Barco crearBattleship()
    Barco crearFrigate()
    Barco crearCanoe()
}

class FabricaBarcos implements FabricaBarcosInt {
    - CuadriculaIA cuadriculaIA
    - int filaInicial
    - int columnaInicial
    - Clima clima
    - EstrategiaPosicionamiento estrategia
    + Barco crearBattleship()
    + Barco crearFrigate()
    + Barco crearCanoe()
}

interface EstrategiaPosicionamiento {
    void posicionarBarco(CuadriculaIA cuadricula, Barco barco)
}

class EstrategiaPosicionamientoEsquina implements EstrategiaPosicionamiento {
    + void posicionarBarco(CuadriculaIA cuadricula, Barco barco)
}

class EstrategiaPosicionamientoAleatorio implements EstrategiaPosicionamiento {
    + void posicionarBarco(CuadriculaIA cuadricula, Barco barco)
}

class EstrategiaPosicionamientoCentro implements EstrategiaPosicionamiento {
    + void posicionarBarco(CuadriculaIA cuadricula, Barco barco)
}

class EstrategiaPosicionamientoConsecutivo implements EstrategiaPosicionamiento {
    + void posicionarBarco(CuadriculaIA cuadricula, Barco barco)
}

Barco <|-- Frigate
Barco <|-- Canoe
Barco <|-- Battleship
Barco ..> Clima
Barco ..> Orientacion
Barco ..> EstrategiaPosicionamiento
Barco -- CuadriculaIA
CuadriculaIA -- Barco
IntBarco <|.. Barco
FabricaBarcosInt <|.. FabricaBarcos
EstrategiaPosicionamiento <|.. EstrategiaPosicionamientoEsquina
EstrategiaPosicionamiento <|.. EstrategiaPosicionamientoAleatorio
EstrategiaPosicionamiento <|.. EstrategiaPosicionamientoCentro
EstrategiaPosicionamiento <|.. EstrategiaPosicionamientoConsecutivo

@enduml
